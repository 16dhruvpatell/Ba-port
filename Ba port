            v_align='center')
            
        info_button = ba.buttonwidget(
            position=(self._width*2, self._height-120),
            parent=self.root_widget,
            color=(1.0, 0.4, 0.4),
            button_type='square',
            size=(50, 50),
            label='?',
            scale=1.3)
            
        ba.buttonwidget(
            edit=info_button,
            on_activate_call=ba.Call(
                ConfirmWindow,
                height=100.0+50,
                cancel_button=False,
                origin_widget=info_button,
                text=ut.Lstr(value='Window.Info')))
        
        back_button = b = ba.buttonwidget(
            position=(self._width*0.1, self._height*0.8),
            label=ba.charstr(ba.SpecialChar.BACK),
            on_activate_call=self._back,
            parent=self.root_widget,
            color=(1.0, 0.0, 0.5),
            button_type='square',
            icon=gt('crossOut'),
            iconscale=1.2,
            size=(50, 50),
            scale=1.8)
        ba.containerwidget(edit=self.root_widget,cancel_button=b)
        
        img = ba.imagewidget(
            parent=self.root_widget,
            size=(120, 120),
            texture=ba.gettexture('file'),
            position=(self._width-240, self._height-120))
        
        size = tuple([s*0.8 for s in size])
        self._scrollwidget = ba.scrollwidget(parent=self.root_widget,
                                             position=(position[0] + (19 * 10), position[1]+80),
                                             highlight=False,
                                             size=size)
        self._columnwidget = ba.columnwidget(parent=self._scrollwidget,
                                             border=70, left_border=420)
                                             #margin=50)

        for script in ut.get_scripts():
            wdg = ba.textwidget(
                parent=self._columnwidget,
                size=(size[0] * 0.35, size[1] * 0.05), scale=3.0,
                color=(1.1, 1.1, 1.1),
                maxwidth=maxwidth,
                text=script,
                click_activate=True,
                selectable=True,
                h_align='center',
                v_align='center',
                on_activate_call=ba.Call(self.port_plugin, script))

    def port_plugin(self, file: str) -> None:
        def call(f=file):
            file = ut.folder + '/' + f
    
            if not os.path.exists(file):
                return
    
            with open(file, 'r') as x:
                script = x.read()
    
            for k, v in words.items():
                script = script.replace(k, v)
    
            with open(file, 'w') as x:
                x.write(script)
            
            children = self.root_widget.get_children()
            for child in children:
                child.delete()
            self._refresh(self._pos, self._size)
    
            _ba.screenmessage(ut.Lstr(value='Window.PluginPorted'), (0.0, 1.0, 0.0))
            ba.playsound(ba.getsound('ding'))

        ConfirmWindow(action=call, width=360.0+80, height=100.0+40,
            text=ut.Lstr(value='Window.PluginConfirm'))

    def _back(self) -> None:
        ba.containerwidget(edit=self.root_widget, transition='out_scale')

def new_message(msg, **kwargs):
    call(msg, **kwargs)
    
    if msg.lower() == ut.msg:
        ut.open_bs17_window()

# ba_meta export plugin
class Port17(ba.Plugin):
    def on_app_running(self):
        globals()['call'] = _ba.chatmessage
        _ba.chatmessage = new_message
        _ba.set_party_icon_always_visible(True)
        ba.timer(1.5, ut.found_plugins)
